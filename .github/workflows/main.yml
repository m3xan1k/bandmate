name: Docker image CI

on: [push, pull_request]

jobs:
    build:
        name: Build Docker Images
        runs-on: ubuntu-latest
        steps:
            uses: actions/checkout@v1
          - name: Setup .env file
            run: |
                echo DEBUG: ${{ secrets.DEBUG }} >> .env
                echo DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }} >> .env
                echo POSTGRES_USER: ${{ secrets.POSTGRES_USER }} >> .env
                echo POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }} >> .env
                echo POSTGRES_DB: ${{ secrets.POSTGRES_DB }} >> .env
                echo SQL_ENGINE: ${{ secrets.SQL_ENGINE }} >> .env
                echo POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }} >> .env
                echo POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }} >> .env
                echo DATABASE: ${{ secrets.DATABASE }} >> .env
                echo EMAIL_HOST: ${{ secrets.EMAIL_HOST }} >> .env
                echo EMAIL_PORT: ${{ secrets.EMAIL_PORT }} >> .env
                echo EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }} >> .env
                echo EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }} >> .env
                echo DEFAULT_FROM_EMAIL: ${{ secrets.DEFAULT_FROM_EMAIL }} >> .env
                echo SECRET_KEY: ${{ secrets.SECRET_KEY }} >> .env
          - name: Build docker-compose stack
            run: docker-compose up -d
          - name: Check running containers
            run: docker ps
          - name: Run tests
            run: docker exec bandmate_app python manage.py test
